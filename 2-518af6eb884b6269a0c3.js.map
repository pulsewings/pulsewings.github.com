{"version":3,"sources":["webpack:///./src/tokens/colors.js","webpack:///./src/theme.js","webpack:///./src/tokens/index.js","webpack:///./src/tokens/media.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/hooks/use-site-config.js","webpack:///./src/hooks/use-site-images.js","webpack:///./src/components/Wrapper.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/Commons.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["colors","grey100","grey200","grey300","grey400","grey500","grey600","grey700","grey800","grey900","white","textLightest","textLightestHover","textLight","primary","primaryAlpha","text","background","backgroundArticle","heartFooter","highlight_code_oneline","highlight_code_bg","highlight_code_marker","highlight_code_linebg","theme","media","small","medium","large","loader","React","result","imageName","image","edge","Wrapper","role","props","isBlogPost","path","lang","useSiteMetadata","siteTitle","siteUrl","siteCover","siteDescription","twitterUsername","title","formatedSiteUrl","withPrefix","imageTwitter","description","name","content","rel","href","property","HeaderWrapper","styled","HeaderNav","HeaderLinksContainer","HeaderLink","HeaderLinkTitle","HeaderLinkTitleContent","HeaderImage","MobilePanel","MobileNav","HeaderLinks","headerLinks","to","headerLink","key","aria-label","BurgerButton","BurgerContent","MobileHeader","useState","isToggledOn","setToggle","onClick","headerTitle","headerLinksIcon","iconSrc","useSiteImages","src","alt","FooterWrapper","authorName","websiteHost","footerLinks","FooterItem","item","className","url","FooterColumn","column","sectionName","i","Date","SiteContent","Template","render","children","this","charSet","Component","GlobalStyle","createGlobalStyle","StyledLink","Text","m","module","require","location","pageResources"],"mappings":"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","file":"2-518af6eb884b6269a0c3.js","sourcesContent":["// 50 shades of grey generator\n// https://javisperez.github.io/tailwindcolorshades/#/?%233E4047=3E4047&tv=1\nconst colors = {\n  grey100: '#ECECED',\n  grey200: '#CFCFD1',\n  grey300: '#B2B3B5',\n  grey400: '#78797E',\n  grey500: '#3E4047',\n  grey600: '#383A40',\n  grey700: '#25262B',\n  grey800: '#1C1D20',\n  grey900: '#131315',\n\n  white: '#ffffff',\n}\n\nexport default {\n  ...colors,\n  textLightest: colors.white,\n  textLightestHover: colors.grey200,\n  textLight: '#57595d',\n  primary: colors.grey500,\n  primaryAlpha: `rgba(32, 35, 42, 0.85)`,\n  text: colors.grey500,\n  background: '#f4f8fb',\n  backgroundArticle: colors.white,\n  heartFooter: 'red',\n  highlight_code_oneline: '#fff9d9',\n  highlight_code_bg: '#ffa7c4',\n  highlight_code_marker: '#ffa7c4',\n  highlight_code_linebg: '#022a4b',\n  // testing\n  // primary: `#6556B3`,\n  // primaryAlpha: `#6556B3cc`,\n}\n","/*\n * To override any of this theme’s tokens in your site, create a new file in\n * your site at `src/gatsby-starter-morning-dew/theme.js` and export an object from\n * it. Tokens are nested under the file name.\n *\n * For example, to override the primary color, your `theme.js` would look\n * something like this:\n *\n *    export default {\n *      colors: {\n *        primary: `#6556B3`,\n *        primaryAlpha: `#6556B3cc`,\n *      }\n *    };\n *\n * All tokens are optional. When a token is not present in `theme.js`, the\n * default value from the `tokens/*.js` files will be used.\n *\n * For a full list of tokens, see the `src/tokens/` directory in this theme.\n */\nexport default {\n  colors: {\n    primary: '#6bd1c5',\n    primaryAlpha: '#6bd1c5',\n  },\n}\n","import colorDefaults from './colors'\nimport mediaDefaults from './media'\nimport theme from '../theme'\n\nexport const colors = { ...colorDefaults, ...(theme.colors || {}) }\nexport const media = { ...mediaDefaults, ...(theme.media || {}) }\nexport default { colors, media }\n","export default {\n  small: '(min-width: 480px)',\n  medium: '(min-width: 700px)',\n  large: '(min-width: 960px)',\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { useStaticQuery, graphql } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const result = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          siteTitle\n          siteUrl\n          siteCover\n          authorName\n          authorAvatar\n          authorDescription\n          siteDescription\n          twitterUsername\n          disqusShortname\n          disqusSiteUrl\n          multilangPosts\n          headerTitle\n          headerLinksIcon\n          headerLinks {\n            label\n            url\n          }\n          websiteHost {\n            name\n            url\n          }\n          footerLinks {\n            sectionName\n            links {\n              label\n              url\n            }\n          }\n        }\n      }\n    }\n  `)\n  return result.site.siteMetadata\n}\n\nexport default useSiteMetadata\n","import { useStaticQuery, graphql } from 'gatsby'\n\nconst useSiteImages = imageName => {\n  const result = useStaticQuery(graphql`\n    {\n      allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n        edges {\n          node {\n            relativePath\n            childImageSharp {\n              fixed {\n                base64\n                tracedSVG\n                aspectRatio\n                width\n                height\n                src\n                srcSet\n                srcWebp\n                srcSetWebp\n                originalName\n              }\n              fluid {\n                base64\n                tracedSVG\n                aspectRatio\n                src\n                srcSet\n                srcWebp\n                srcSetWebp\n                sizes\n                originalImg\n                originalName\n                presentationWidth\n                presentationHeight\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const items = result.allFile.edges\n  const image = items.find(edge => edge.node.relativePath === imageName)\n  if (image === undefined) {\n    throw `Unable to find image: ${imageName} (in content/images)`\n  }\n\n  return image.node.childImageSharp\n}\n\nexport default useSiteImages\n","import styled from 'styled-components'\nimport { colors } from '../tokens'\n\nconst Wrapper = styled.main.attrs({\n  role: 'main',\n})`\n  position: relative;\n  border-radius: 5px;\n  width: 80%;\n  max-width: 940px;\n  word-wrap: break-word;\n  background-color: ${colors.backgroundArticle};\n  margin: 0px auto 30px auto;\n  top: 30px;\n  padding: 50px;\n  /* box-shadow: 0 0 0 0, 0 6px 12px rgba(0, 0, 0, 0.1); */\n\n  @media (max-width: 780px) {\n    width: 100%;\n    padding: 25px;\n  }\n`\n\nexport default Wrapper\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { withPrefix } from 'gatsby'\nimport useSiteMetadata from '../hooks/use-site-config'\n\nconst SEO = props => {\n  const { isBlogPost, path = '', lang = 'en' } = props\n  const {\n    siteTitle,\n    siteUrl,\n    siteCover,\n    siteDescription,\n    twitterUsername,\n  } = useSiteMetadata()\n\n  const title = props.title ? `${props.title} | ${siteTitle}` : siteTitle\n  const formatedSiteUrl = siteUrl.substring(0, siteUrl.length - 1)\n  const imagePath = props.imageFb || props.cover || withPrefix(siteCover)\n  const imagePathTwitter = props.imageTw || props.cover || withPrefix(siteCover)\n  const image = `${formatedSiteUrl}${imagePath}`\n  const imageTwitter = `${formatedSiteUrl}${imagePathTwitter}`\n  const description = props.description || siteDescription\n\n  return (\n    <Helmet title={title}>\n      {/* General tags */}\n      <html lang={lang} />\n      <meta name=\"description\" content={description} />\n      <link rel=\"canonical\" href={formatedSiteUrl + withPrefix(path)} />\n\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={formatedSiteUrl + withPrefix(path)} />\n      <meta property=\"og:type\" content={isBlogPost ? 'article' : 'website'} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={twitterUsername} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={imageTwitter} />\n    </Helmet>\n  )\n}\n\nexport default SEO\n","import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport useSiteMetadata from '../hooks/use-site-config';\nimport { colors, media } from '../tokens';\nimport useSiteImages from '../hooks/use-site-images';\n\nconst HeaderWrapper = styled.header`\n  top: 0;\n  left: 0;\n  margin: 0 auto;\n  display: block;\n  width: 100%;\n  z-index: 1000;\n  background-color: ${colors.primaryAlpha};\n  font-weight: 700;\n\n  @media ${media.medium} {\n    position: fixed;\n  }\n`;\n\nconst HeaderNav = styled.nav`\n  font-weight: 700;\n  margin-left: auto;\n  margin-right: auto;\n  height: 60px;\n  display: flex;\n  flex-direction: row;\n  max-width: 940px;\n  z-index: 1000;\n  justify-content: space-between;\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n  padding: 0px 20px;\n`;\n\nconst HeaderLinksContainer = styled.div`\n  display: none;\n  -webkit-box-align: center;\n  align-items: center;\n  @media ${media.medium} {\n    display: flex;\n  }\n`;\n\nconst HeaderLink = styled(Link)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: ${colors.textLightest};\n  border: 0;\n  margin: 0;\n  padding: 8px 10px;\n\n  min-width: 42px;\n  z-index: 10;\n  & + & {\n    margin-left: 0.7rem;\n  }\n`;\n\nconst HeaderLinkTitle = styled(HeaderLink)`\n  padding-left: 0;\n`;\n\nconst HeaderLinkTitleContent = styled.span`\n  display: block;\n  padding-left: 0;\n`;\n\nconst HeaderImage = styled.img`\n  padding: 4px;\n  height: 57px;\n`;\n\nconst MobilePanel = styled.div`\n  position: absolute;\n  z-index: 20;\n  left: 0;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  background-color: ${colors.primary};\n  @media ${media.medium} {\n    display: none;\n  }\n`;\n\nconst MobileNav = styled.nav`\n  max-width: 800px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 0px auto;\n\n  & a {\n    display: flex;\n    margin: 10px 0 !important;\n  }\n`;\n\nconst HeaderLinks = ({ headerLinks }) => {\n  return headerLinks.map((headerLink, i) => (\n    <HeaderLink\n      to={headerLink.url}\n      key={`header-link-${i}`}\n      aria-label={`View ${headerLink.label} page`}\n    >\n      {headerLink.label}\n    </HeaderLink>\n  ));\n};\n\nconst BurgerButton = styled.button`\n  z-index: 30;\n  top: 0px;\n  position: relative;\n  color: ${colors.textLightest};\n  display: flex;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 8px 12px;\n  outline: none;\n  -webkit-tap-highlight-color: transparent;\n\n  @media ${media.medium} {\n    display: none;\n  }\n`;\n\nconst BurgerContent = styled.div`\n  width: 24px;\n  height: 2px;\n  background: ${colors.textLightest};\n  position: absolute;\n  left: 0;\n  ${props =>\n    props.isToggledOn ? 'background: transparent' : `background: ${colors.textLightest}`};\n  transition: all 250ms cubic-bezier(0.86, 0, 0.07, 1);\n  ::before {\n    content: '';\n    top: -8px;\n    width: 24px;\n    height: 2px;\n    background: ${colors.textLightest};\n    position: absolute;\n    left: 0;\n    ${props => (props.isToggledOn ? 'transform: rotate(45deg); top: 0;' : 'transform: rotate(0)')};\n    transition: all 250ms cubic-bezier(0.86, 0, 0.07, 1);\n  }\n  ::after {\n    top: 8px;\n    content: '';\n    width: 24px;\n    height: 2px;\n    background: white;\n    position: absolute;\n    left: 0;\n    ${props => (props.isToggledOn ? 'transform: rotate(-45deg); top: 0;' : 'transform: rotate(0)')};\n    transition: all 250ms cubic-bezier(0.86, 0, 0.07, 1);\n  }\n`;\n\nconst MobileHeader = ({ headerLinks }) => {\n  const [isToggledOn, setToggle] = useState(false);\n  const toggle = () => setToggle(!isToggledOn);\n\n  return (\n    <>\n      <BurgerButton onClick={toggle} aria-label={`${isToggledOn ? 'close menu' : 'open menu'}`}>\n        <BurgerContent isToggledOn={isToggledOn} />\n      </BurgerButton>\n      {isToggledOn && (\n        <MobilePanel>\n          <MobileNav>\n            <HeaderLinks headerLinks={headerLinks} />\n          </MobileNav>\n        </MobilePanel>\n      )}\n    </>\n  );\n};\n\nconst Header = () => {\n  const { headerLinks, siteTitle, headerTitle, headerLinksIcon } = useSiteMetadata();\n  // const iconSrc = headerLinksIcon ? useSiteImages(headerLinksIcon).fluid.src : null;\n  const iconSrc = useSiteImages(headerLinksIcon).fluid.src;\n\n  return (\n    <HeaderWrapper>\n      <HeaderNav>\n        <HeaderLinkTitle to={`/`} aria-label={`View home page`}>\n          {iconSrc && <HeaderImage src={iconSrc} alt={siteTitle} />}\n          <HeaderLinkTitleContent>{headerTitle}</HeaderLinkTitleContent>\n        </HeaderLinkTitle>\n        <HeaderLinksContainer>\n          <HeaderLinks headerLinks={headerLinks} />\n        </HeaderLinksContainer>\n        <MobileHeader headerLinks={headerLinks} />\n      </HeaderNav>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport { colors } from '../tokens'\n\nconst FooterWrapper = styled.footer`\n  text-align: left;\n  padding-top: 30px;\n  padding-bottom: 50px;\n  background-color: ${colors.primary};\n  color: ${colors.textLightest};\n  padding-left: 20px;\n  padding-right: 20px;\n  margin: 0 auto;\n\n  & nav {\n    display: flex;\n    flex-flow: row wrap;\n    align-items: flex-start;\n    max-width: 900px;\n    margin: 0 auto;\n\n    .footer-col {\n      flex: 1 auto;\n      display: inline-flex;\n      flex-direction: column;\n      margin-bottom: 1em;\n      padding-right: 1em;\n    }\n  }\n\n  & a {\n    color: ${colors.textLightest};\n    font-weight: bold;\n\n    &:hover {\n      color: ${colors.textLightestHover};\n      /* border-bottom: 1px dotted ${colors.textLightestHover}; */\n    }\n  }\n\n  .footer-col > p {\n    margin: 0;\n  }\n  .footer-title {\n    margin: 0 0 1rem;\n  }\n\n  .footer-item {\n    padding: 0.25rem 0;\n    color: ${colors.textLightest};\n  }\n\n  .footer-heart {\n    color: ${colors.heartFooter};\n  }\n\n  .footer-item-text {\n    padding: 0.1rem 0;\n    color: ${colors.textLightest};\n  }\n\n  .footer-header {\n    order: 1;\n    margin: 0 0.25rem;\n    margin-right: 0.25rem;\n    padding: 0.25rem;\n  }\n\n  @media (max-width: 564px) {\n    .footer-col:first-child {\n      width: 100%;\n    }\n  }\n`\n\nconst Footer = () => {\n  const { authorName, websiteHost, footerLinks } = useSiteMetadata()\n\n  const FooterItem = ({ item }) => {\n    if (item.url.startsWith('/')) {\n      return (\n        <span className=\"footer-item\">\n          <Link className=\"footer-link\" to={item.url}>\n            {item.label}\n          </Link>\n        </span>\n      )\n    }\n    return (\n      <span className=\"footer-item\">\n        <a className=\"footer-link\" href={item.url}>\n          {item.label}\n        </a>\n      </span>\n    )\n  }\n\n  const FooterColumn = ({ column }) => {\n    return (\n      <div className=\"footer-col\">\n        <h5 className=\"footer-title\" key={column.sectionName}>\n          {column.sectionName}\n        </h5>\n        {column.links.map((item, i) => {\n          return <FooterItem item={item} key={`footer-column-item-${i}`} />\n        })}\n      </div>\n    )\n  }\n\n  return (\n    <FooterWrapper>\n      <nav>\n        <div className=\"footer-col\">\n          <h5 className=\"footer-title\">\n            {authorName} © {new Date().getFullYear()}\n          </h5>\n          <p className=\"footer-item-text\">\n            Built with{' '}\n            <a className=\"footer-link\" href=\"https://www.gatsbyjs.org\">\n              Gatsby\n            </a>\n            .\n          </p>\n          <p className=\"footer-item-text\">\n            Theme using{' '}\n            <a\n              className=\"footer-link\"\n              href=\"https://github.com/maxpou/gatsby-starter-morning-dew\"\n            >\n              gatsby-starter-morning-dew\n            </a>\n            .\n          </p>\n          <p className=\"footer-item-text\">\n            Hosted with <span className=\"footer-heart\">❤</span> by{' '}\n            <a className=\"footer-link\" href={websiteHost.url}>\n              {websiteHost.name}\n            </a>\n            .\n          </p>\n        </div>\n        {footerLinks.map((column, i) => {\n          return <FooterColumn column={column} key={`footer-column-${i}`} />\n        })}\n      </nav>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport Header from './Header';\nimport Footer from './Footer';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport { GlobalStyle } from './Commons';\nimport { media } from '../tokens';\n\nconst SiteContent = styled.div`\n  margin: 0 0;\n\n  @media ${media.medium} {\n    margin: 60px 0;\n  }\n`;\n\nclass Template extends React.Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <link\n            href=\"https://fonts.googleapis.com/css?family=Lato:400,700&display=swap\"\n            rel=\"stylesheet\"\n          />\n        </Helmet>\n        <GlobalStyle />\n        <Header />\n        <SiteContent>{children}</SiteContent>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default Template;\n","import styled from 'styled-components'\nimport { createGlobalStyle } from 'styled-components'\nimport { Link } from 'gatsby'\nimport { colors } from '../tokens'\n\nexport const GlobalStyle = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n@import url('https://cdn.rawgit.com/innks/NanumSquareRound/master/nanumsquareround.min.css');\n\nbody {\n  font-family: 'NanumSquareRound', sans-serif;\n  color: ${colors.text};\n  background-color: ${colors.background};\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n  vertical-align: middle;\n  border: 0;\n}\n\na {\n  text-decoration: none;\n  color: ${colors.primary};\n}\n\nul,\nol {\n  padding-left: 2em;\n  margin: 1em 0 0 0;\n}\n`\nexport const StyledLink = styled(Link)`\n  border-bottom: 1px dotted ${colors.primary};\n\n  &:hover {\n    border-bottom-style: solid;\n  }\n`\n\nexport const Text = styled.p`\n  line-height: 1.6;\n  margin: 1em 0 0 0;\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}